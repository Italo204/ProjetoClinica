/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;
import controller.*;
import entities.*;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.JFormattedTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashSet;
import java.util.Set;



/**
 *
 * @author User
 */
public class AgendamentoTela extends javax.swing.JFrame {
    public final EspecialidadeController especialidadeController;
    public final MedicoController medicoController;
    public final ConvenioController convenioController;
    /**
     * Creates new form Agendamento
     */
    public AgendamentoTela() {
        initComponents();
        configureCpf();
        configureTime();
        this.especialidadeController = new EspecialidadeController();
        this.medicoController = new MedicoController();
        this.convenioController = new ConvenioController();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voltarButton = new javax.swing.JButton();
        horaTextField = new javax.swing.JFormattedTextField();
        DataTextField = new javax.swing.JFormattedTextField();
        CpfTextField = new javax.swing.JFormattedTextField();
        nomeTextField = new javax.swing.JTextField();
        cbconvenio = new javax.swing.JComboBox();
        cbespecialidade = new javax.swing.JComboBox();
        cbTipoConsulta = new javax.swing.JComboBox<>();
        cbmedico = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTagenda = new javax.swing.JTable();
        agendarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        observacaoTextArea = new javax.swing.JTextArea();
        TipoConLabel = new javax.swing.JLabel();
        jLabelTipoConsulta = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        jLabelCPF = new javax.swing.JLabel();
        jLabelMedico = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4Convenio = new javax.swing.JLabel();
        jLabelHora = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        voltarButton.setText("VOLTAR");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(voltarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 480, 150, 40));
        getContentPane().add(horaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 270, -1));
        getContentPane().add(DataTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 270, -1));
        getContentPane().add(CpfTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 270, -1));
        getContentPane().add(nomeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 270, -1));

        cbconvenio.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbconvenioAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(cbconvenio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 270, -1));

        cbespecialidade.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbespecialidadeAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cbespecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbespecialidadeActionPerformed(evt);
            }
        });
        getContentPane().add(cbespecialidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 270, -1));

        cbTipoConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONVENIO", "PARTICULAR" }));
        getContentPane().add(cbTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 270, -1));

        cbmedico.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbmedicoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(cbmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 270, -1));

        JTagenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Medico", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(JTagenda);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 670, 200));

        agendarButton.setBackground(new java.awt.Color(51, 255, 51));
        agendarButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        agendarButton.setForeground(new java.awt.Color(251, 251, 251));
        agendarButton.setText("Agendar");
        agendarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(agendarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 370, 450, 50));

        observacaoTextArea.setColumns(20);
        observacaoTextArea.setRows(5);
        jScrollPane1.setViewportView(observacaoTextArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 90, 450, 260));

        TipoConLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TipoConLabel.setForeground(new java.awt.Color(255, 255, 255));
        TipoConLabel.setText("Tipo Consulta: ");
        getContentPane().add(TipoConLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabelTipoConsulta.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelTipoConsulta.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTipoConsulta.setText("Especialidade:");
        getContentPane().add(jLabelTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabelData.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelData.setForeground(new java.awt.Color(255, 255, 255));
        jLabelData.setText("Data:");
        getContentPane().add(jLabelData, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        jLabelCPF.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelCPF.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCPF.setText("CPF:");
        getContentPane().add(jLabelCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        jLabelMedico.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelMedico.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMedico.setText("Médico:");
        getContentPane().add(jLabelMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Observação:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nome:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        jLabel4Convenio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4Convenio.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4Convenio.setText("Convênio:");
        getContentPane().add(jLabel4Convenio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 80, -1));

        jLabelHora.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelHora.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHora.setText("Hora:");
        getContentPane().add(jLabelHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Agenda-PainelFundo.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 0, 1250, 650));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Agenda-PainelFundo.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-570, -10, 1810, 670));

        cbTipoConsulta.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                atualizarComboConvenio();
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void configureTime() {
        try {
            MaskFormatter mask = new MaskFormatter("##:##");
            MaskFormatter maskDate = new MaskFormatter("##/##/####");
            
            mask.install(horaTextField);
            horaTextField.setColumns(5);
            maskDate.install(DataTextField);
            DataTextField.setColumns(10);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void configureCpf(){
        try {
            MaskFormatter mask = new MaskFormatter("###.###.###-##");
            

            mask.install(CpfTextField);
            CpfTextField.setColumns(14);


        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void cbespecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbespecialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbespecialidadeActionPerformed

    private void cbespecialidadeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbespecialidadeAncestorAdded

        ArrayList<Especialidade> listaEspc = this.especialidadeController.findAllEspecialidade();
        cbespecialidade.removeAll();
        for(Especialidade e : listaEspc){
            cbespecialidade.addItem(e);
        }
    }//GEN-LAST:event_cbespecialidadeAncestorAdded

    private void cbmedicoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbmedicoAncestorAdded
        // TODO add your handling code here:
        Especialidade espc = (Especialidade) cbespecialidade.getSelectedItem();
        long idEspc = espc.getID();
        
        ArrayList<Medico> listaMed = this.medicoController.searchForEspc(idEspc);
        cbmedico.removeAll();
        for(Medico m : listaMed){
            cbmedico.addItem(m);
        }
    }//GEN-LAST:event_cbmedicoAncestorAdded

    private void cbconvenioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbconvenioAncestorAdded
        ArrayList<Convenio> listaCon = this.convenioController.findAllConvenio();
        cbconvenio.removeAll();
        for(Convenio c : listaCon) {
            cbconvenio.addItem(c);
        }
    }//GEN-LAST:event_cbconvenioAncestorAdded

    private void atualizarComboConvenio() {
        // Desabilita o cbconvenio se "Particular" estiver selecionado em cbTipoConsulta
        boolean isParticularSelected = cbTipoConsulta.getSelectedItem().equals("PARTICULAR");
        cbconvenio.setEnabled(!isParticularSelected);

        if(isParticularSelected) {
            cbconvenio.setSelectedIndex(-1);
        }
    }
    
    
    private void agendarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendarButtonActionPerformed
        //Somente para cadastro:
        AgendamentoController agendamentoController = new AgendamentoController();
        if(agendamentoController.checkUser(CpfTextField.getText().replaceAll("[^0-9]", "")) ){
            String tipo = Objects.toString(cbTipoConsulta.getSelectedItem());
            Convenio convenio = (Convenio) (cbconvenio.getSelectedItem());
            String nome = nomeTextField.getText();
            String CPF = CpfTextField.getText().replaceAll("[^0-9]", "");
            PacienteController pacControl = new PacienteController();
            Paciente paciente = new Paciente();
            paciente.setID(pacControl.getID(CPF));
            paciente.setCPF(CPF);
            Especialidade especialidade = (Especialidade) cbespecialidade.getSelectedItem();
            Medico medico = (Medico) cbmedico.getSelectedItem();
            String dataNoFormat = DataTextField.getText();
            String horaString = horaTextField.getText();
            String observacao = observacaoTextArea.getText();
            if(observacao.trim().isEmpty()){
                observacao =  "";
            } 
            if("PARTICULAR".equals(tipo)){
                convenio =  null;
            }
            
            try {
            DateTimeFormatter dataFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate data = LocalDate.parse(dataNoFormat, dataFormatter);

            DateTimeFormatter horaFormatter = DateTimeFormatter.ofPattern("HH:mm");
            LocalTime hora = LocalTime.parse(horaString, horaFormatter);

            Agendamento agendamento = new Agendamento(data, hora, paciente, observacao, tipo, medico, convenio, nome, especialidade);
            AgendamentoController agendarControl = new AgendamentoController();
            agendarControl.saveAgendamento(agendamento);

            // Para adicionar à lista
            DefaultTableModel listAgenda = (DefaultTableModel) JTagenda.getModel();
            String horaData = data.format(dataFormatter) + " " + hora.format(horaFormatter);
            Object[] dados = {agendamento.getID(), nomeTextField.getText(), medico, horaData};
            listAgenda.addRow(dados);  // Adicione esta linha para realmente adicionar à tabela
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO: "+e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }

            
        } else{
            JOptionPane.showMessageDialog(null, "Paciente não cadastrado", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_agendarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField CpfTextField;
    private javax.swing.JFormattedTextField DataTextField;
    private javax.swing.JTable JTagenda;
    private javax.swing.JLabel TipoConLabel;
    private javax.swing.JButton agendarButton;
    private javax.swing.JComboBox<String> cbTipoConsulta;
    private javax.swing.JComboBox cbconvenio;
    private javax.swing.JComboBox cbespecialidade;
    private javax.swing.JComboBox cbmedico;
    private javax.swing.JFormattedTextField horaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4Convenio;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelMedico;
    private javax.swing.JLabel jLabelTipoConsulta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JTextArea observacaoTextArea;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
